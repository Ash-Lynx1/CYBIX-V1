// plugins/menu.js
import { Markup } from "telegraf";
import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";
import config from "../config.js";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const rootDir = path.join(__dirname, "..");
const dbPath = path.join(rootDir, "database", "stats.json");
const pluginsDir = path.join(rootDir, "plugins");

// --- Safe helpers ------------------------------------------------------------
function safeReadJSON(p, fallback) {
  try {
    return JSON.parse(fs.readFileSync(p, "utf8"));
  } catch {
    return fallback;
  }
}

function countPlugins() {
  try {
    return fs.readdirSync(pluginsDir).filter(f => f.endsWith(".js")).length;
  } catch {
    return 0;
  }
}

function escapeMarkdownV2(text) {
  return text.replace(/[_*[\]()~`>#+\-=|{}.!]/g, "\\$&");
}

// --- Menu builder ------------------------------------------------------------
function menuCaption(username = "user") {
  const stats = safeReadJSON(dbPath, { users: [] });
  const usersCount = Array.isArray(stats.users) ? stats.users.length : 0;
  const pluginsCount = countPlugins();

  return [
    `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ„Äê${escapeMarkdownV2(config.botName)}„Äë‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
    `‚îÉ hi @${escapeMarkdownV2(username)} welcome to (${escapeMarkdownV2(config.botName)}), enjoy..!`,
    `‚î£‚îÅ[ users: ${usersCount}`,
    `‚î£‚îÅ[ prefix: ${escapeMarkdownV2(config.prefix)}`,
    `‚î£‚îÅ[ plugins: ${pluginsCount}`,
    `‚î£‚îÅ[ owner: ${escapeMarkdownV2(config.owner)}`,
    `‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
    ``,
    `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ„ÄêMENU „Äë‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
    `‚î£‚îÅ[ AI MENU`,
    `‚îÉ .chatgpt`,
    `‚îÉ .deepseek`,
    `‚îÉ .blackbox`,
    `‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
    `‚î£‚îÅ[ DOWNLOAD`,
    `‚îÉ .apk`,
    `‚îÉ .play`,
    `‚îÉ .video`,
    `‚îÉ .gitclone`,
    `‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
    `‚î£‚îÅ[ OTHER MENU`,
    `‚îÉ .runtime`,
    `‚îÉ .ping`,
    `‚îÉ .developer`,
    `‚îÉ .buybot`,
    `‚îÉ .repo`,
    `‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
    `‚î£‚îÅ[ DEVELOPER`,
    `‚îÉ .broadcast`,
    `‚îÉ .statics`,
    `‚îÉ .mode`,
    `‚îÉ .listusers`,
    `‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
    ``,
    `‚ñ£ powered by CYBIX TECH üëπüíÄ`
  ].join("\n");
}

function stackedBrandKeyboard() {
  return Markup.inlineKeyboard([
    [Markup.button.url("üì¢ WhatsApp Channel", config.channels.whatsapp)],
    [Markup.button.url("üöÄ Telegram Channel", config.channels.telegram)]
  ]);
}

// --- Plugin -----------------------------------------------------------------
export default function (bot) {
  const sendMenu = async (ctx) => {
    const username = ctx.from?.username || "user";
    const caption = menuCaption(username);

    try {
      await ctx.replyWithPhoto(
        { url: config.banner },
        {
          caption,
          parse_mode: "MarkdownV2",
          ...stackedBrandKeyboard()
        }
      );
    } catch (e) {
      console.error("‚ùå Error sending menu:", e.message);
      await ctx.reply(caption, { parse_mode: "MarkdownV2", ...stackedBrandKeyboard() });
    }
  };

  bot.start(sendMenu);
  bot.command("menu", sendMenu);
  bot.hears(/^[.„ÄÇ]menu\b/i, sendMenu);
}